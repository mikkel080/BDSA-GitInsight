@page "/insight"
@page "/insight/{org}/{proj}"
@using GitInsight.Blazor.Data
@using Microsoft.AspNetCore.Components

@using System.Text.Json
@using System.Text.Json.Serialization
<h3>InsightPage</h3>


@if(true)
{
    <p>Test</p>
    <input @bind="org" />
    <input @bind="proj"/>
}

<label>Which mode do you wan the analysis to be in</label>
<select @bind="mode">
    <option value="a">Author</option>
    <option value="c">Commit</option>
</select>

<p></p>

<label>Fetch from REST API?</label>
<input type="checkbox" @bind="doAPIFetch"/>

<p>Mode has the current value: @mode</p>

<button class="btn btn-primary" @onclick="@fetchAnalysis">Get Analysis</button>

<p @bind="Results" >Here are the results shown</p>
@if (isFetchSuccesful){
    @foreach (var item in poco.AuthorResult.Data)
    {
        <p>Name : @item.AuthorName</p>
        @foreach (var item2 in item.FrequencyResults.Data)
        {
            <p>Date : @item2.Date  Count: @item2.Count</p>
        }
    }
} 
    @*<p>Display the analysis</p>*@

@code{
    
[Parameter]
        public string org { get; set; } = "";

        [Parameter]
        public string proj { get; set; } = "";
        [Inject]
        IHttpClientFactory ClientFactory { get; set; }

        private bool isFetchSuccesful { get; set; }

        private string mode { get; set; } = "";
        private Rootobject poco { get; set; }

        private bool doAPIFetch { get; set; } = false;


        private async Task fetchAnalysis()
        {
            isFetchSuccesful = false;
            if (org == "" || proj == "" || mode == "")
                return;


            if (doAPIFetch)
            {
                var request = new HttpRequestMessage(HttpMethod.Get,
                $"https://localhost:7199/{org}/{proj}");
                /*request.Headers.Add("Accept", "application/vnd.github.v3+json");
                request.Headers.Add("User-Agent", "HttpClientFactory-Sample");*/

                var client = ClientFactory.CreateClient();

                var response = await client.SendAsync(request);

                if (response.IsSuccessStatusCode)
                {
                    using var responseStream = await response.Content.ReadAsStreamAsync();
                    poco = await JsonSerializer.DeserializeAsync
                        <Rootobject>(responseStream);
                    isFetchSuccesful = true;
                    
                }
                else
                {
                    isFetchSuccesful = false;
                }
            }
            else
            {
                //System.IO.FileNotFoundException: 'Could not find file 'C:\Users\User\source\repos\GitInsight\BDSA-GitInsight\GitInsight.Blazor\wwwroot\miinum98.json'.'
                var file = File.ReadAllText("wwwroot/miinim98.json");
                poco = JsonSerializer.Deserialize<Rootobject>(file);
            }
            //Fetch the data from the api.
        }
}
